imports:
  commons: ./commons.yml
  root: ./__package__.yml
types:
  GeneratorReleaseRequest:
    extends: commons.ReleaseRequest
    properties:
      generator_id: root.GeneratorId
      ir_version:
        type: integer
        docs: The major version of the IR that this generator version consumes.
      migration:
        type: optional<string>
        docs: >-
          The TypeScript file for the migration to run when upgrading to this
          version. Ideally this would be typed as a file, but we don't support
          file upload in the express generator.
      custom_config_schema:
        type: optional<string>
        docs: >-
          The JSON schema (stringified) for the custom config that this
          generator version supports.
  GeneratorRelease:
    extends: commons.Release
    properties:
      generator_id: root.GeneratorId
      ir_version:
        type: integer
        docs: The major version of the IR that this generator version consumes.
      migration:
        type: optional<string>
        docs: >-
          The TypeScript file for the migration to run when upgrading to this
          version.
      custom_config_schema:
        type: optional<string>
        docs: >-
          The JSON schema (stringified) for the custom config that this
          generator version supports.
  ListGeneratorReleasesResponse:
    properties:
      generator_releases: list<GeneratorRelease>
service:
  base-path: /generators/versions
  auth: true
  endpoints:
    getLatestGeneratorRelease:
      method: POST
      path: /latest
      request:
        body:
          properties:
            generator: root.GeneratorId
            cli_version:
              type: optional<string>
              docs: >
                The version of the CLI that is requesting the latest generator
                version. This is used to determine the latest IR version the
                generator must respect.
            ir_version:
              type: optional<integer>
              docs: >
                The IR version that the generator must respect. If this is
                provided alongside `cli_version`, `cli_version` takes
                precedence.
            generator_major_version:
              type: optional<integer>
              docs: >
                If specified, we will only return the latest version that is the
                same major version as provided. Useful while we do not support
                config migrations, etc.
            release_types:
              type: optional<list<commons.ReleaseType>>
              docs: >-
                A filter for the release type, specifically if you'd like to get
                RC releases only, etc. Defaults to GA releases.
        name: GetLatestGeneratorReleaseRequest
      response: GeneratorRelease
      errors:
        - NoValidGeneratorsFoundError
      docs: Get the latest generator version that has not been yanked.
    getChangelog:
      method: GET
      path: /{generator}/changelog/{from_version}/to/{to_version}
      path-parameters:
        generator: root.GeneratorId
        from_version: string
        to_version: string
      response: commons.GetChangelogResponse
      docs: >-
        Get the changelog for the specified generator upgrade. The response will
        be a map of the generator version to it's corresponding changelog.
    upsertGeneratorRelease:
      method: PUT
      path: ''
      request: GeneratorReleaseRequest
      errors:
        - commons.InvalidVersionError
      docs: Update or create the specified generator version.
    getGeneratorRelease:
      method: GET
      path: /{generator}/{version}
      path-parameters:
        generator: root.GeneratorId
        version: string
      response: GeneratorRelease
      errors:
        - GeneratorVersionNotFoundError
      docs: Get the specified generator version.
    listGeneratorReleases:
      method: GET
      path: /{generator}
      path-parameters:
        generator: root.GeneratorId
      pagination:
        offset: $request.page
        results: $response.generator_releases
      request:
        query-parameters:
          page:
            type: optional<integer>
            docs: The page integer to retrieve. Defaults to 0.
          page_size:
            type: optional<integer>
            docs: The integer of items to retrieve per page. Defaults to 20.
        name: ListGeneratorReleasesRequest
      response: ListGeneratorReleasesResponse
      docs: Get all generator versions for the specified generator.
  audiences:
    - generators
errors:
  GeneratorVersionNotFoundError:
    status-code: 404
    type: commons.InvalidVersionErrorMessage
  NoValidGeneratorsFoundError:
    status-code: 404
docs: CRUD API for managing generator versions.
