imports:
  commons: ./commons.yml
  apiReadV1Endpoint: ./api/v1/read/endpoint.yml
  navigation: ./navigation/__package__.yml
types:
  AlgoliaSearchIndex: string
  Breadcrumbs: list<string>
  IndexSegmentId: string
  AlgoliaRecord:
    union:
      page-v3: AlgoliaPageRecordV3
      endpoint-v3: AlgoliaEndpointRecordV3
      websocket-v3: AlgoliaWebSocketRecordV3
      webhook-v3: AlgoliaWebhookRecordV3
      endpoint: AlgoliaEndpointRecord
      page: AlgoliaPageRecord
      endpoint-v2: AlgoliaEndpointRecordV2
      page-v2: AlgoliaPageRecordV2
    audiences:
      - read
  AlgoliaRecordVersionV3:
    properties:
      id: commons.VersionId
      slug: navigation.Slug
  AlgoliaPageRecordV3:
    properties:
      title: string
      content: optional<string>
      breadcrumbs: Breadcrumbs
      slug: navigation.Slug
      version: optional<AlgoliaRecordVersionV3>
      indexSegmentId: IndexSegmentId
  AlgoliaEndpointRecordV3:
    extends: AlgoliaPageRecordV3
    properties:
      method: apiReadV1Endpoint.HttpMethod
      endpointPath: list<apiReadV1Endpoint.EndpointPathPart>
      isResponseStream: optional<boolean>
  AlgoliaWebSocketRecordV3:
    extends: AlgoliaPageRecordV3
    properties:
      endpointPath: list<apiReadV1Endpoint.EndpointPathPart>
  AlgoliaWebhookRecordV3:
    extends: AlgoliaPageRecordV3
    properties:
      method: apiReadV1Endpoint.HttpMethod
      endpointPath: list<apiReadV1Endpoint.EndpointPathPart>
  IndexSegment:
    properties:
      id: IndexSegmentId
      searchApiKey: string
  SingleAlgoliaIndexInfo:
    union:
      unversioned: UnversionedSingleAlgoliaIndexInfo
      versioned: VersionedSingleAlgoliaIndexInfo
  UnversionedSingleAlgoliaIndexInfo:
    properties:
      indexSegment: IndexSegment
  VersionedSingleAlgoliaIndexInfo:
    properties:
      indexSegmentsByVersionId: map<commons.VersionId, IndexSegment>
  SearchInfo:
    union:
      legacyMultiAlgoliaIndex:
        type: LegacyMultiAlgoliaIndexInfo
        docs: >-
          The legacy search storage where each docs website got its own algolia
          index.
      singleAlgoliaIndex:
        type: SingleAlgoliaIndexInfo
        docs: Every docs website is indexed in a global Algolia Index
  LegacyMultiAlgoliaIndexInfo:
    properties:
      algoliaIndex: optional<string>
    availability: deprecated
  AlgoliaEndpointRecord:
    properties:
      title: string
      subtitle: string
      path: string
      version: optional<commons.VersionId>
      versionSlug: optional<string>
      indexSegmentId: optional<string>
    availability: deprecated
  AlgoliaPageRecord:
    properties:
      title: string
      subtitle: string
      path: string
      version: optional<commons.VersionId>
      versionSlug: optional<string>
      indexSegmentId: optional<string>
    availability: deprecated
  AlgoliaRecordEndpointPath:
    properties:
      parts: list<apiReadV1Endpoint.EndpointPathPart>
    availability: deprecated
  AlgoliaRecordPathPart:
    properties:
      name: string
      urlSlug: string
      skipUrlSlug: optional<boolean>
    availability: deprecated
  AlgoliaRecordPath:
    properties:
      parts: list<AlgoliaRecordPathPart>
    docs: >-
      The path corresponding to a search record represented as a list of parts.
      If the docs are versioned, the version prefix must be added when building
      the string representation of the path.
    availability: deprecated
  AlgoliaRecordEndpointSummary:
    properties:
      name: optional<string>
      description: optional<string>
      method: apiReadV1Endpoint.HttpMethod
      path: AlgoliaRecordEndpointPath
    availability: deprecated
  AlgoliaRecordVersion:
    properties:
      id: commons.VersionId
      urlSlug: string
    availability: deprecated
  AlgoliaEndpointRecordV2:
    properties:
      endpoint: AlgoliaRecordEndpointSummary
      path: AlgoliaRecordPath
      version: optional<AlgoliaRecordVersion>
      indexSegmentId: IndexSegmentId
    availability: deprecated
  AlgoliaPageRecordV2:
    properties:
      title: string
      content: string
      path: AlgoliaRecordPath
      version: optional<AlgoliaRecordVersion>
      indexSegmentId: IndexSegmentId
    availability: deprecated
