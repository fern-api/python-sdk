# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..........core.datetime_utils import serialize_datetime
from .......commons.types.api_definition_id import ApiDefinitionId
from ...read.types.colors_config import ColorsConfig
from ...read.types.file_id import FileId
from ...read.types.page_content import PageContent
from ...read.types.page_id import PageId
from .db_file_info import DbFileInfo
from .docs_db_config import DocsDbConfig
from .docs_typography_config import DocsTypographyConfig


class DocsDefinitionDbV2(pydantic.BaseModel):
    pages: typing.Dict[PageId, PageContent]
    referenced_apis: typing.List[ApiDefinitionId] = pydantic.Field(alias="referencedApis")
    files: typing.Dict[FileId, DbFileInfo]
    config: DocsDbConfig
    colors: typing.Optional[ColorsConfig]
    typography: typing.Optional[DocsTypographyConfig]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
