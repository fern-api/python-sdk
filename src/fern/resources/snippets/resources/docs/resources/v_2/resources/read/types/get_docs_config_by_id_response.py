# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..........core.datetime_utils import serialize_datetime
from .......api.resources.v_1.resources.read.types.api_definition import ApiDefinition
from .......commons.types.api_definition_id import ApiDefinitionId
from .....v_1.resources.read.types.docs_config import DocsConfig


class GetDocsConfigByIdResponse(pydantic.BaseModel):
    docs_config: DocsConfig = pydantic.Field(alias="docsConfig")
    apis: typing.Dict[ApiDefinitionId, ApiDefinition]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
