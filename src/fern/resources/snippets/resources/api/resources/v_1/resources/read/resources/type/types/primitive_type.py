# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions


class PrimitiveType_Integer(pydantic.BaseModel):
    type: typing_extensions.Literal["integer"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Double(pydantic.BaseModel):
    type: typing_extensions.Literal["double"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Long(pydantic.BaseModel):
    type: typing_extensions.Literal["long"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_String(pydantic.BaseModel):
    type: typing_extensions.Literal["string"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Boolean(pydantic.BaseModel):
    type: typing_extensions.Literal["boolean"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Datetime(pydantic.BaseModel):
    type: typing_extensions.Literal["datetime"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Uuid(pydantic.BaseModel):
    type: typing_extensions.Literal["uuid"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Base64(pydantic.BaseModel):
    type: typing_extensions.Literal["base64"]

    class Config:
        frozen = True
        smart_union = True


class PrimitiveType_Date(pydantic.BaseModel):
    type: typing_extensions.Literal["date"]

    class Config:
        frozen = True
        smart_union = True


PrimitiveType = typing.Union[
    PrimitiveType_Integer,
    PrimitiveType_Double,
    PrimitiveType_Long,
    PrimitiveType_String,
    PrimitiveType_Boolean,
    PrimitiveType_Datetime,
    PrimitiveType_Uuid,
    PrimitiveType_Base64,
    PrimitiveType_Date,
]
