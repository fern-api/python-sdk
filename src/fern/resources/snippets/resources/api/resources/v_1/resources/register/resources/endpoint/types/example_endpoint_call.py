# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ............core.datetime_utils import serialize_datetime
from ...commons.types.with_description import WithDescription
from .example_endpoint_request import ExampleEndpointRequest
from .example_endpoint_response import ExampleEndpointResponse
from .path_parameter_key import PathParameterKey


class ExampleEndpointCall(WithDescription):
    path: str
    path_parameters: typing.Dict[PathParameterKey, typing.Any] = pydantic.Field(alias="pathParameters")
    query_parameters: typing.Dict[str, typing.Any] = pydantic.Field(alias="queryParameters")
    headers: typing.Dict[str, typing.Any]
    request_body: typing.Any = pydantic.Field(alias="requestBody")
    request_body_v_2: typing.Optional[ExampleEndpointRequest] = pydantic.Field(alias="requestBodyV2")
    response_status_code: int = pydantic.Field(alias="responseStatusCode")
    response_body: typing.Any = pydantic.Field(alias="responseBody")
    response_body_v_2: typing.Optional[ExampleEndpointResponse] = pydantic.Field(alias="responseBodyV2")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
